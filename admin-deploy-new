#!/bin/bash

main()
{
	scriptdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
	read -p "Repo url: " repo
	read -p "Branch [master]: " branch
	branch=${branch:-master}
	webroot=/var/repos/${1}
	cp ${scriptdir}/assets/gad-repo.scaffold /tmp/
	scaffold=/tmp/gad-repo.scaffold
	# Search and replace values in scaffold
	sed -i -e 's/BRANCH/'${branch}'/g' ${scaffold}
	sed -i -e "s/REPO/${repo//\//\\/}/g" ${scaffold}
	sed -i -e "s/WEBROOT/${webroot//\//\\/}/g" ${scaffold}
	sed -i -e "s/HOST/${1//\//\\/}/g" ${scaffold}
	newrepo=$(cat $scaffold)
	cat /etc/git-auto-deploy.conf.json \
		| jq ".repositories[.repositories| length] += ${newrepo}" \
		> /tmp/git-auto-deploy.conf.json
	cp /etc/git-auto-deploy.conf.json ~/.gad.conf.json.backup
	sudo cp /tmp/git-auto-deploy.conf.json /etc/git-auto-deploy.conf.json
	sudo cp ~/.ssh/config /etc/git-auto-deploy/.ssh/config
	sudo chown git-auto-deploy:git-auto-deploy /etc/git-auto-deploy/.ssh/config
	sudo service git-auto-deploy stop
	sudo pkill git-auto-deploy
	sudo service git-auto-deploy start
	sudo tail -f /var/log/git-auto-deploy.log
}
# Error handling a la http://stackoverflow.com/a/22224317
abort()
{
	rm -f /tmp/gad*
	rm -f /tmp/git-auto-deploy*
	echo "An error occurred. Exiting..." >&2
	exit 1
}
trap 'abort' 0
set -e
# Check if there is no first argument
if [ ! ${1+x} ]; then
	echo "Missing host argument"
	exit 1
fi

main ${1}

# Trap all errors
trap : 0
# Exit normally
echo >&2 '
************
*** DONE *** 
************
'


exit 0
