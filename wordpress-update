#!/bin/bash
USAGE="
$(basename $0) Version  0.2.8

Usage: wordpress-update HOSTNAME [WEBROOT]
Where:
- HOSTNAME must be available in ssh config
- WEBROOT is optional, defaults to /var/www/html

Note: if WEBROOT is not supplied then wordpress-permissions 
will be run to set ownership to the dev user. Add the WEBROOT
parameter to suppress this action.
"

failure(){
    notify "Update failed for $SITEURL  " critical
    exit 1
}

# Print USAGE if no args
if [ $# -eq 0 ]; then
	echo "$USAGE"
	failure
fi
HOSTNAME="$1"
WEBROOT="${2:-/var/www/html}"
# Find the wp-cli binary
WP_CLI_LOCAL=$(which wp)
PLUGIN_UPDATE_EXCLUSIONS="woocommerce,advanced-custom-fields-pro"
# Set global options for wp-cli or report missing binary
if [ $? -eq 0 ]; then
	WP="${WP_CLI_LOCAL} --path=${WEBROOT} --allow-root --skip-themes --skip-plugins --ssh=${HOSTNAME} "
else
	notify "wp-cli not found on admin server" critical
	failure
fi
wordpress-backup "$HOSTNAME" dbtmp "$WEBROOT"

$WP core is-installed
if [ ! $? -eq 0 ]; then
	notify "wp core is not installed at ${SITEURL}??? Oh no!" critical 
    failure
fi
SITEURL=$($WP option get siteurl)
if [ ! $? -eq 0 ]; then
	notify "siteurl failure for ${SITEURL}" critical 
    failure
fi
UPDATES_AVAILABLE=$($WP core check-update --format=count)
if [ -z $UPDATES_AVAILABLE ]; then
	notify "Core update is not available for ${SITEURL}"
fi
$WP core update
if [ ! $? -eq 0 ]; then
	notify "core update error for $SITEURL" critical 
    failure
fi
$WP core update-db
if [ ! $? -eq 0 ]; then
	notify "db update error for $SITEURL" critical 
    failure
fi
sleep 1
# notify "Core update completed for ${SITEURL}. Post-upgrade screenshot:" "$SITEURL"

# Update plugins
PLUGIN_UPDATES_AVAILABLE=$($WP plugin list --update=available --status=active | wc -l)
[ $? -eq 0 ] || failure "plugin updates info 1"
PLUGIN_NAMES=$($WP --allow-root plugin list --field=name --update=available --status=active)
[ $? -eq 0 ] || failure "plugin updates info 2"
notify "$PLUGIN_UPDATES_AVAILABLE plugin updates are available for ${SITEURL}. The plugins are: $PLUGIN_NAMES"

# If there is no webroot argument supplied we assume this is a 
# legacy server at DO with login user dev
if [ -z $2 ]; then
    wordpress-permissions $HOSTNAME dev
fi

$WP plugin update --all --exclude=$PLUGIN_UPDATE_EXCLUSIONS
[ $? -eq 0 ] || notify "Some plugin updates failed for $SITEURL" critical
PLUGIN_NAMES=$($WP --allow-root plugin list --field=name --update=available --status=active)
[ $? -eq 0 ] || failure "plugin updates info 3"
notify "Plugins not updated: $PLUGIN_NAMES"

notify "All updates completed for ${SITEURL}. Post-upgrade screenshot:" "$SITEURL"

wordpress-permissions $HOSTNAME www-data
wordpress-commit $HOSTNAME $WEBROOT

exit 0
