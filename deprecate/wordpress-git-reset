#!/bin/bash

USAGE="
$(basename $0) Version  0.2.8

$(basename $0) HOSTNAME WEBROOT
Resets s git repo in a remote webroot
This script tested only with root login to lsws web servers.
"

failure(){
    NOTE="$1"
    notify "$(basename $0) failed for $HOSTNAME (${NOTE})" critical
    exit 1
}

# Print USAGE if not enough args
if [ $# -lt 2 ]; then
	echo "$USAGE"
	exit 1
fi
HOSTNAME="$1"
WEBROOT="$2"
REMOTE_USER=$(ssh $HOSTNAME 'echo $USER')
REPODIR="/var/repos"
GITDIR="${REPODIR}/${HOSTNAME}/.git"

if [ -z "$WEBROOT" ]; then
    failure "missing value for webroot"
fi

if [ ! -d "$REPODIR" ]; then
    failure "local repodir does not exist"
fi

if [ ! -d "$GITDIR" ]; then
    failure "local git dir does not exist"
fi

if [[  $REMOTE_USER == "dev" ]]; then
    echo "Fix permissions on $HOSTNAME for $REMOTE_USER"
    wordpress-permissions "$HOSTNAME" "$REMOTE_USER"
fi

rsync -r "$GITDIR" "${HOSTNAME}/${WEBROOT}/"

echo "git reset --hard on $HOSTNAME"
ssh $HOSTNAME "cd $WEBROOT ; git fetch ; git add . ; git reset --hard"
[ $? -eq 0 ] || failure "git reset"

notify "git repo was reset --hard on ${HOSTNAME}."

# TODO after testing, add -rf flag to delete recursively
ssh "$HOSTNAME" "rm ${WEBROOT}/.git"
[ $? -eq 0 ] || failure "delete .git"

echo "BEFORE"
ssh "$HOSTNAME" "ls -l $WEBROOT"

echo "Fix permissions manually on $HOSTNAME or CTRL-C to leave as-is"
wordpress-permissions "$HOSTNAME"

echo "AFTER"
ssh "$HOSTNAME" "ls -l $WEBROOT"

exit 0
