#!/bin/bash

print_usage() {
echo "
Status: ALPHA

wordpress-bulk-update DOMAIN AAA BBB [MODE]
bulk search replace with wp-cli on a remote host
takes two strings AAA BBB
the first string will be replaced with the second
the strings are assumed to be URLs with no prefix
multiple prefixes will be attached i.e.:
https://AAA http://AAA @AAA

MODE can be DRY-RUN, REPLACE
Mode will default to DRY-RUN

This script exists in order to replace old domains
with new values and reduce reliance on redirects.

$1
"
}

# Print USAGE if not enough args
# TODO allow two args to erase a string with confirmation
if [ $# -lt 3 ]; then
	print_usage "Not enough arguments!"
	exit 1
fi

DOMAIN=$1
AAA=$2
BBB=$3
PREFIXES=("@" "http://" "HTTP://" "https://" "HTTPS://" "src=\"" "SRC=\"" "src=\'" "SRC=\'")
WEBROOT="/var/www/html"
WPBIN=$(which wp)
# Set global options for wp-cli or report missing binary
if [ $? -eq 0 ]; then
	WP="${WPBIN} --path=${WEBROOT} --allow-root --skip-themes --skip-plugins --ssh=${DOMAIN} --skip-columns=UUID --report-changed-only"
else
	notify "wp-cli not found on admin server" critical
	exit 1
fi

case $4 in
	DRY-RUN)
		echo "DRY RUN MODE ACTIVE"
		WP="${WP} --dry-run"
		;;
	COUNT)
		echo "COUNT MODE ACTIVE"
		PREFIXES=("")
		WP="${WP} --dry-run --format=count"
		;;
	REPLACE)
		echo "REPLACE MODE ACTIVE"	
		;;
	*)
		echo "DEFAULT DRY RUN MODE ACTIVE"
		WP="${WP} --dry-run"
		;;
esac
		

for P in ${PREFIXES[@]}; do
	echo "Prefix $P"
	$WP search-replace "${P}${AAA}" "${P}${BBB}" 
done
if [ -n $PREFIXES ]; then
	$WP search-replace "${AAA}" "${BBB}" 
fi
