#!/bin/bash

USAGE="
$(basename $0) Version  0.2.8

$(basename $0) HOSTNAME WEBROOT REPOURL
All 3 parameters are required.
Syncs a git repo from a remote webroot to the local tmp dir and commits 
all changes to a new branch.
It syncs, it branches, it commits, it pushes, it notifies.
Commits will be made in the name of the user that executes this script.
"

failure(){
    NOTE="$1"
    notify "ERROR - $(basename $0) failed for $HOSTNAME (${NOTE})" critical
    exit 1
}

# Print USAGE if not enough args
if [ $# -lt 3 ]; then
	echo "$USAGE"
	exit 1
fi
BRANCH="${AUTO_COMMIT_BRANCH:-staging}"
echo "Branch name is $BRANCH"
HOSTNAME="$1"
WEBROOT="$2"
REPOURL="$3"
WORKING_DIR="$(pwd)"
TEMPDIR=${TEMPDIR:-/tmp}
REPO_LOCAL="${TEMPDIR}/${HOSTNAME}-${BRANCH}"
GITIGNORE="${REPO_LOCAL}/.gitignore"

mkdir -p "$REPO_LOCAL"
[ $? -eq 0 ] || failure "mkdir"

if [ -d "$REPO_LOCAL" ]; then
    REPO_LOCAL_CONTENTS="$(ls $REPO_LOCAL)"
    if [ ! -z $REPO_LOCAL_CONTENTS ]; then
        failure "Repo dir $REPO_LOCAL is not empty."
    fi
else
    failure "$REPO_LOCAL does not exist"
fi

echo "Finding binaries"
GIT=`which git`
[ $? -eq 0 ] || failure "git"

RSYNC=`which rsync`
[ $? -eq 0 ] || failure "rsync not found"
RSYNC="$RSYNC -a --exclude-from=$GITIGNORE --exclude 'robots.txt' --delete"
[ $? -eq 0 ] || failure "rsync error $?"

echo "Clone git repo"
$GIT clone $REPOURL $REPO_LOCAL/
[ $? -eq 0 ] || failure "git clone error"

echo "Change directories"
cd $REPO_LOCAL 
[ $? -eq 0 ] || failure "cd $REPO_LOCAL"

echo "Checkout branch $BRANCH"
$GIT checkout "$BRANCH"
[ $? -eq 0 ] || failure "checkout $BRANCH"

echo "Check for .gitignore"
[ -f $GITIGNORE ] || failure "$GITIGNORE does not exist, abort!"

echo "Sync files from remote to local"
$RSYNC ${HOSTNAME}:${WEBROOT}/* .
[ $? -eq 0 ] || failure "rsync error"

echo "Add all new files to commit"
$GIT add -A
[ $? -eq 0 ] || failure "git add -A"

echo "git commit"
$GIT commit -am 'Automatic update.'
[ $? -eq 0 ] || failure "commit"

echo "push $BRANCH"
$GIT push
[ $? -eq 0 ] || failure "push"

notify "SUCCESS - commit from ${HOSTNAME}:${WEBROOT} to ${REPOURL} (${BRANCH})"

exit 0
