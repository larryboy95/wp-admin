#!/bin/bash

USAGE="
$(basename $0) Version  0.2.8

$(basename $0) HOSTNAME WEBROOT
Syncs a git repo from a remote webroot to the local tmp dir and commits 
all changes to a new branch.
It syncs, it branches, it commits, it pushes, it notifies.
Branch is named auto_updates_timestamp, where timestamp is seconds since the Unix epoch.
Commits will be made in the name of the user that executes this script.
This script tested only with root login to lsws web servers.
"

failure(){
    NOTE="$1"
    notify "$(basename $0) failed for $HOSTNAME (${NOTE})" critical
    exit 1
}

# Print USAGE if not enough args
if [ $# -lt 2 ]; then
	echo "$USAGE"
	exit 1
fi
TIMESTAMP="$(date +%s)"
echo "Timestamp is $TIMESTAMP"
BRANCH="auto_updates_${TIMESTAMP}"
echo "Branch name is $BRANCH"
HOSTNAME="$1"
WEBROOT="$2"
WORKING_DIR="$(pwd)"
TEMPDIR=${TEMPDIR:-/tmp}
REPO_LOCAL="${TEMPDIR}/${BRANCH}"
GITIGNORE="${REPO_LOCAL}/.gitignore"

mkdir "$REPO_LOCAL"
[ $? -eq 0 ] || failure "mkdir"

if [ -d "$REPO_LOCAL" ]; then
    REPO_LOCAL_CONTENTS="$(ls $REPO_LOCAL)"
    if [ ! -z $REPO_LOCAL_CONTENTS ]; then
        failure "Repo dir $REPO_LOCAL is not empty."
    fi
else
    failure "$REPO_LOCAL does not exist"
fi

echo "Finding binaries"
GIT=`which git`
[ $? -eq 0 ] || failure "git"

RSYNC=`which rsync`
[ $? -eq 0 ] || failure "rsync"
RSYNC="$RSYNC -a"

echo "Sync .git* from remote to local"
$RSYNC ${HOSTNAME}:${WEBROOT}/.git* $REPO_LOCAL/
[ $? -eq 0 ] || failure "rsync error"

echo "Sync files from remote to local"
$RSYNC --exclude-from=$GITIGNORE ${HOSTNAME}:${WEBROOT}/* ${REPO_LOCAL}/
[ $? -eq 0 ] || failure "rsync error"

echo "Change directories"
cd $REPO_LOCAL 
[ $? -eq 0 ] || failure "cd $REPO_LOCAL"

echo "Checkout new branch $BRANCH"
$GIT checkout -b "$BRANCH"
[ $? -eq 0 ] || failure "checkout $BRANCH"

echo "Add all new files to commit"
$GIT add -A
[ $? -eq 0 ] || failure "git add -A"

echo "git commit"
$GIT commit -am 'Automatic update.'
[ $? -eq 0 ] || failure "commit"

echo "push $BRANCH"
$GIT push -u origin $BRANCH
[ $? -eq 0 ] || failure "push"

notify "Automatic git commit script completed without error for ${HOSTNAME}. See branch ${BRANCH}"

exit 0
