#!/bin/bash

USAGE="
Usage: do-letsencrypt CONFIGFILE HOSTNAME

HOSTNAME (alphanumeric and dashes only) 

Config file vars required, (see do-new-wp.conf.example):
    FQDN
    EMAIL

Optional vars and their default values:
    SSHHOSTS ~/.ssh/config
    ANSIBLEHOSTS /etc/ansible/hosts
    WILDCARD boolean defaults true
"
# Print USAGE if no args
if [ $# -eq 0 ]; then
    echo "$USAGE"
    exit 1
fi
SCRIPTDIR=$(dirname "${0}")
CONFIGPARSE="${SCRIPTDIR}/includes/config_parse"
[ -f "$1" ] || { echo "Config file not found"; exit 1; }
[ -f "$CONFIGPARSE" ] || { echo "Includes error"; exit 1; }
. "${SCRIPTDIR}/includes/helpers"
# If host exists then offer to overwrite
# Optionally restore a site to new droplet
function main {
    local FQDN 
    . "$CONFIGPARSE"
    ansible_check_host "$@"
    [ $? -eq 1 ] && ansible_add_host "$@"
    letsencrypt_ansible "$@"
    echo "
***
    https://${FQDN}
***
    "
}

function letsencrypt_ansible {
    . "$CONFIGPARSE"
    ansible-playbook "${SCRIPTDIR}/ansible/letsencrypt.yml" --extra-vars "
        host=${HOSTNAME}
        fqdn=${FQDN}
        email=${EMAIL}
        domain=${DOMAIN}
        newcert=${NEWCERT}
        wildcard=${WILDCARD}
        wildcardchain=${WILDCARDCHAIN}"
    if [ ! $? -eq 0 ]; then
        echo "Error running ansible."
        exit 1
    fi
}



main "$@"
exit 0
