#!/bin/bash

# Copy ssh keys and known hosts file to ${1}
# Install and configure git-auto-deploy

main()
{
	scriptdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
	read -p "Repo url: " repo
	read -p "Port for git-auto-deploy [7777]: " gadport
	gadport=${gadport:-7777}
	read -p "Branch [master]: " branch
	branch=${branch:-master}
	read -p "Path [/var/www/html]: " webroot
	webroot=${webroot:-/var/www/html}
	read -p "Ssh credentials dir [~/essentials/dev-ssh]: " identity
	identity=${identity:-~/essentials/dev-ssh}
	cp ${scriptdir}/assets/git-auto-deploy.scaffold /tmp/
	scaffold=/tmp/git-auto-deploy.scaffold
	# escape strings:
	wesc=$(printf '%q' ${webroot})
	resc=$(printf '%q' ${repo})

	# Search and replace values in scaffold
	sed -i -e 's/GADPORT/${gadport}/g' ${scaffold}
	sed -i -e 's/BRANCH/${branch}/g' ${scaffold}
	sed -i -e 's/REPOURL/${resc}/g' ${scaffold}
	sed -i -e 's/WEBROOT/${wresc}/g' ${scaffold}

	# First setup the standard dev user git credentials
	ssh ${1} "[ ! -d ~/.ssh ] && mkdir ~/.ssh || echo 'folder exists'" < /dev/null
	scp ${identity}/* ${1}:.ssh/
	ssh ${1} "chmod 600 .ssh/id_rsa"
	scp ${scaffold} ${1}:
	ssh ${1} "sudo mv git-auto-deploy.scaffold /etc/git-auto-deploy.conf.json"
	cmd="chmod 600 ~/.ssh/id_rsa; \
		sudo apt-get update; \
		sudo apt-get install -y software-properties-common; \
		sudo add-apt-repository -y ppa:olipo186/git-auto-deploy; \
		sudo apt-get update; \
		sudo apt-get install -y git-auto-deploy; \
	"
	ssh -t ${1} ${cmd}
	[ ! $? -eq 0 ] && exit $?
	cmd="sudo cp ~/.ssh/* /etc/git-auto-deploy/.ssh/; \
		sudo chown -R git-auto-deploy:git-auto-deploy /etc/git-auto-deploy; \
		sudo chown -R git-auto-deploy:git-auto-deploy ${webroot}; \
		sudo chown -R www-data:www-data ${webroot}/wp-content/uploads; \
		sudo gpasswd -a dev git-auto-deploy; \
		sudo service git-auto-deploy start; \
	"
	ssh -t ${1} ${cmd}
}
abort()
{
	# http://stackoverflow.com/a/22224317
	echo "An error occurred. Exiting..." >&2
	exit 1
}
trap 'abort' 0
set -e

echo "Install/configure dev keys/git-auto-deploy on ${1}?"
read -p "Are you sure? (y/n) " -r  
if [[ $REPLY =~ ^[Yy]$ ]]; then  
	main ${1}
fi
# ditto
trap : 0

echo >&2 '
************
*** DONE *** 
************
'
exit 0
