#!/bin/sh
set -x
USAGE="
$(basename $0) Version 0.1.3

Usage: $(basename $0) MESSAGE ['critical' || URL] 

Sends MESSAGE as a tweet.
If the second argument is 'critical' then MESSAGE will be sent from the critical notification account.
If the second argument is a URL then screenshots will be taken and tweeted along with the MESSAGE from the regular account.

Configured in ~/.tw.conf
Account for critical notifications is configured in ~/.tw.conf

Depends on:
- https://github.com/hrs/MARKOV-sentence-generator
- https://github.com/piroor/tweet.sh
"
# Print USAGE if no args
if [ $# -eq 0 ]; then
    echo "$USAGE"
    exit 1
fi
MESSAGE="$1"
LASTRUNFILE="${HOME}/.tw.lastrun"
[ -f "$LASTRUNFILE" ] || echo $(date +%s) > "$LASTRUNFILE"
LASTRUN=$(cat "$LASTRUNFILE")
SINCELASTRUN=$(expr $(date +%s) - $LASTRUN)
TEMPDIR="/tmp/${USER}/"
[ -d "$TEMPDIR" ] && rm -f "${TEMPDIR}*" || mkdir "$TEMPDIR"
cd "$TEMPDIR"
TEMPURL="tw-urls.tmp"
TEMPJPG="tw-tmp"
# Cleanup temp files on exit
#trap 'rm -f ${TEMPDIR}*; rmdir $TEMPDIR' EXIT	

if [ $SINCELASTRUN -lt 31 ]; then
	echo "${SINCELASTRUN}s since last tweet. Please wait until 30s have passed."
	exit 1
fi
if [ -f /usr/local/bin/tweet.sh ]; then
    TEXTVOL="/opt/markov-sentence-generator/360.txt.utf-8"
    MARKOV=$(/opt/markov-sentence-generator/sentence-generator.py "$TEXTVOL" 5 | cut -d " " -f 1-20)
    . "${HOME}/.tw.conf"
    if [ $# -eq 1 ]; then
	    tweet.sh post "${MESSAGE} ${MARKOV}" > /dev/null 2>&1
    elif [ "$2" = "critical" ]; then
        . "${HOME}/.tw-critical.conf"
	    tweet.sh post "${MESSAGE} ${MARKOV}" > /dev/null 2>&1
    else
        URL="$2"
        PARGS="--crop --delay=2 --format=png"
        curl -s "$URL" \
            | grep -Po '(?<=href=")[^"]*' \
            | grep "$URL" \
            | grep -v '.css\|rss\|xml\|json\|feed\|.ico\|.jpg\|.png\|.js\|.svg\|?' \
            | awk '{ print length($0) " " $0; }' $file \
            | sort -r -n \
            | cut -d ' ' -f 2- \
            | uniq \
            | head -n 2 \
            > ${TEMPURL};
        pageres "$PARGS" --filename="${TEMPJPG}-0" "$URL" 1600x2100
        pageres \
            "$PARGS" \
            --userAgent 'Mozilla/5.0 (Linux; Android 6.0.1; Nexus 6P Build/MMB29P) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.83 Mobile Safari/537.36' \
            --filename="${TEMPJPG}-1" \
            "$URL" \
            700x2100
        MID[0]=$(tweet.sh upload "${TEMPJPG}-0.png" | jq -r '.media_id_string')
        MID[1]=$(tweet.sh upload "${TEMPJPG}-1.png" | jq -r '.media_id_string')
        n=2
        while IFS='' read -r line || [[ -n "$line" ]]; do
            pageres "$PARGS" --filename="${TEMPJPG}-${n}" "$line" 1600x2100
            ((n++))
        done < "${TEMPURLs}"
        MID[2]=$(tweet.sh upload "${TEMPJPG}-2.png" | jq -r '.media_id_string')
        MID[3]=$(tweet.sh upload "${TEMPJPG}-3.png" | jq -r '.media_id_string')
        echo ${MID[@]}
	    tweet.sh post -m ${MID[0]},${MID[1]},${MID[2]},${MID[3]} "${MESSAGE} ${MARKOV}"  > /dev/null 2>&1
    fi
	echo $(date +%s) > "$LASTRUNFILE"
else 
	echo "Could not find tweet.sh"
fi
echo "$MESSAGE"
exit 0
